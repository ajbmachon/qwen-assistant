[tool.poetry]
name = "qwen-assistant"
version = "0.1.0"
description = "An implementation of a Qwen3-based Agent-Army architecture that integrates multiple Model Context Protocol (MCP) servers"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "qwen_assistant"}]

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = "^3.9.1"
pyyaml = "^6.0.1"
python-dotenv = "^1.0.0"
gradio = "^4.19.1"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.1"
pytest-cov = "^4.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
qwen-assistant = "qwen_assistant.__main__:run"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "asyncio: mark a test as an asyncio test"
]
