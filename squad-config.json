{
  "version": "1.0.0",
  "name": "claude-code-orchestration",
  "description": "Multi-agent Claude Code development system with ATLAS integration",
  "agents": {
    "dev": {
      "description": "Development agent responsible for implementing features and fixing bugs",
      "program": "claude",
      "autoAccept": false,
      "mcpServers": ["atlas", "web-search", "context7", "exa"]
    },
    "review": {
      "description": "Review agent responsible for code review and quality assurance",
      "program": "claude",
      "autoAccept": true,
      "mcpServers": ["atlas", "web-search", "context7", "exa"]
    },
    "test": {
      "description": "Testing agent responsible for writing and executing tests",
      "program": "claude",
      "autoAccept": true,
      "mcpServers": ["atlas", "web-search", "context7", "exa"]
    }
  },
  "mcpServers": {
    "atlas": {
      "command": "claude mcp add atlas atlas-mcp-server --env ATLAS_NEO4J_URI=${ATLAS_NEO4J_URI}",
      "roles": ["dev", "review", "test"],
      "permissions": "readwrite"
    },
    "web-search": {
      "command": "claude mcp add web-search web-search-mcp --api-key=${SEARCH_API_KEY}",
      "roles": ["dev", "review", "test"],
      "permissions": "enabled"
    },
    "context7": {
      "command": "claude mcp add context7 npx context7@latest --project=claude-code-orchestration",
      "roles": ["dev", "review", "test"],
      "permissions": "enabled"
    },
    "exa": {
      "command": "claude mcp add exa exa-mcp-server --api-key=${EXA_API_KEY}",
      "roles": ["dev", "review", "test"],
      "permissions": "enabled"
    }
  },
  "workspaceSettings": {
    "useGitWorktrees": true,
    "baseBranch": "main",
    "commitMessageTemplate": "[{agent}] {message}",
    "autoCommitOnPause": true,
    "autoPushOnCommit": false,
    "toolPermissions": {
      "bash": "allow",
      "read": "allow",
      "write": "allow",
      "edit": "allow",
      "notebookRead": "allow",
      "notebookEdit": "allow",
      "ls": "allow",
      "glob": "allow",
      "grep": "allow",
      "agent": "allow",
      "webSearch": "allow",
      "webFetch": "allow"
    },
    "allowedCommands": [
      "git branch",
      "git checkout",
      "git status",
      "git add",
      "git commit",
      "git push",
      "git pull",
      "git fetch",
      "git merge",
      "git rebase",
      "git log",
      "git diff",
      "git stash",
      "git reset",
      "git show",
      "git clone",
      "poetry install",
      "poetry add",
      "poetry remove",
      "poetry update",
      "poetry run",
      "poetry build",
      "poetry shell",
      "poetry env",
      "poetry check",
      "poetry export",
      "poetry list",
      "poetry show",
      "poetry config",
      "cat",
      "ls",
      "pwd",
      "cd",
      "mkdir",
      "touch",
      "rm",
      "cp",
      "mv",
      "find",
      "grep",
      "echo",
      "python",
      "pytest",
      "pip"
    ]
  }
}
